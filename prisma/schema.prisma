generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ───────────────────────────
// 🧑‍💼 Autenticación y Usuarios
// ───────────────────────────

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  role          String    @default("user")
  isAuthorized  Boolean   @default(false)
  image         String?

  accounts Account[]
  sessions Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  transactions InventoryTransaction[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  USER
  AUDITOR
}

// ───────────────────────────
// 💎 Inventario de piedras
// ───────────────────────────

model InventoryItem {
  id        String   @id @default(cuid())
  name      String
  type      String // ej: "oro", "esmeralda"
  unit      String // ej: "gramos", "kilates", "unidad"
  quantity  Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Historial de movimientos
  transactions InventoryTransaction[]
}

model InventoryTransaction {
  id        String          @id @default(cuid())
  item      InventoryItem   @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId    String
  type      TransactionType
  amount    Float
  createdAt DateTime        @default(now())
  User      User?           @relation(fields: [userId], references: [id])
  userId    String?
}

enum TransactionType {
  ENTRADA
  SALIDA
}
